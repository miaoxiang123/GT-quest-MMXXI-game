#include "graphics.h"

#include "globals.h"

/*
In this file put all your graphical functions (don't forget to declare them first
in graphics.h). So when you want to draw something use this file. One cool function
to look at would be uLCD.blit() there are more like filled_rectangle etc... 
https://os.mbed.com/users/4180_1/notebook/ulcd-144-g2-128-by-128-color-lcd/
This website is a good resource.
*/

void draw_player(int u, int v, int key)
{
    int new_player[121] = {

0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 
0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 
0xff060b0b, 0xfff8fdfd, 0xfff8fdfd, 0xfff8fdfd, 0xff00fff0, 0xff00fff0, 0xff060b0b, 0xfff8fdfd, 0xfff8fdfd, 0xfff8fdfd, 0xff00fff0, 
0xff060b0b, 0xfff8fdfd, 0xfff8fdfd, 0xfff8fdfd, 0xff00fff0, 0xff00fff0, 0xff060b0b, 0xfff8fdfd, 0xfff8fdfd, 0xfff8fdfd, 0xff00fff0, 
0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 
0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 
0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 
0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff060b0b, 0xff060b0b, 0xff060b0b, 0xff060b0b, 0xff060b0b, 0xff00fff0, 0xff00fff0, 0xff00fff0, 
0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 
0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 
0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0, 0xff00fff0

};
    uLCD.BLIT(u, v, 11, 11, new_player);
}

#define YELLOW 0xFFFF00
#define BROWN  0xD2691E
#define DIRT   BROWN
void draw_img(int u, int v, const char* img)
{
    int colors[11*11];
    for (int i = 0; i < 11*11; i++)
    {
        if (img[i] == 'R') colors[i] = RED;
        else if (img[i] == 'Y') colors[i] = YELLOW;
        else if (img[i] == 'G') colors[i] = GREEN;
        else if (img[i] == 'D') colors[i] = DIRT;
        else if (img[i] == '5') colors[i] = LGREY;
        else if (img[i] == '3') colors[i] = DGREY;
        else colors[i] = BLACK;
    }
    uLCD.BLIT(u, v, 11, 11, colors);
    wait_us(250); // Recovery time!
}

void draw_nothing(int u, int v)
{
    // Fill a tile with blackness
    uLCD.filled_rectangle(u, v, u+10, v+10, BLACK);
}

void draw_wall(int u, int v)
{
    uLCD.filled_rectangle(u, v, u+10, v+10, BROWN);
}

void draw_plant(int u, int v)
{
    uLCD.filled_rectangle(u, v, u+10, v+10, GREEN);
}

void draw_door(int u, int v)
{
    uLCD.filled_rectangle(u, v, u+10, v+10, YELLOW);
}

void draw_npc(int u, int v)
{
    int new_player[121] = {

0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 
0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 
0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 
0xfff73604, 0xfff73604, 0xfffbfbfb, 0xff060b0b, 0xfffbfbfb, 0xfff73604, 0xfff73604, 0xfffbfbfb, 0xff060b0b, 0xfffbfbfb, 0xfff73604, 
0xfff73604, 0xfff73604, 0xfffbfbfb, 0xff060b0b, 0xfffbfbfb, 0xfff73604, 0xfff73604, 0xfffbfbfb, 0xff060b0b, 0xfffbfbfb, 0xfff73604, 
0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 
0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 
0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xff7a21ea, 0xff7a21ea, 0xff7a21ea, 0xff7a21ea, 0xfff73604, 0xfff73604, 0xfff73604, 
0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xff7a21ea, 0xff7a21ea, 0xff7a21ea, 0xff7a21ea, 0xfff73604, 0xfff73604, 0xfff73604, 
0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xff7a21ea, 0xff7a21ea, 0xff7a21ea, 0xff7a21ea, 0xfff73604, 0xfff73604, 0xfff73604, 
0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604

};
    uLCD.BLIT(u, v, 11, 11, new_player);
}

void draw_key(int u, int v){
    int new_key[121] = {

0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xfff73604, 0x00000000, 0x00000000, 0xfff73604, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xfff73604, 0xfff73604, 0xfff73604, 0xfff73604, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xfff73604, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xfff73604, 0xfff73604, 0xfff73604, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xfff73604, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xfff73604, 0xfff73604, 0xfff73604, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xfff73604, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000

};
    uLCD.BLIT(u, v, 11, 11, new_key);
}

void draw_fire(int u, int v){
    int new_key[121] = {

0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0xfff44207, 0x00000000, 0x00000000, 0x00000000, 0xfff44207, 0x00000000, 0x00000000, 0x00000000, 0xfff44207, 0x00000000, 
0x00000000, 0xfff44207, 0x00000000, 0x00000000, 0x00000000, 0xfff44207, 0x00000000, 0x00000000, 0xfff44207, 0xfff44207, 0x00000000, 
0x00000000, 0xfff44207, 0xfff44207, 0x00000000, 0xfff44207, 0xfff44207, 0x00000000, 0x00000000, 0xfff44207, 0xfff44207, 0x00000000, 
0x00000000, 0xfff44207, 0xfff44207, 0x00000000, 0xfff44207, 0xfff44207, 0x00000000, 0xfff44207, 0xfff44207, 0xfff44207, 0x00000000, 
0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0x00000000, 
0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0x00000000, 
0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0x00000000, 
0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0x00000000, 
0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0xfff44207, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000

};
    uLCD.BLIT(u, v, 11, 11, new_key);
}

void draw_boss(int u, int v){
    int new_key[121] = {

0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 
0xfff9f9f9, 0xfff9f9f9, 0x00000000, 0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0x00000000, 0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 
0xfff9f9f9, 0xfff9f9f9, 0x00000000, 0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0x00000000, 0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 
0xfff9f9f9, 0xfff9f9f9, 0x00000000, 0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0x00000000, 0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 
0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 
0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0x00000000, 
0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0x00000000, 0xfff9f9f9, 0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0x00000000, 0xfff9f9f9, 0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0x00000000, 0xfff9f9f9, 0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
};
    uLCD.BLIT(u, v, 11, 11, new_key);
}

void draw_ball(int u, int v){
    int new_key[121] = {

0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0x00000000, 0x00000000, 
0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0x00000000, 
0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0x00000000, 
0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0x00000000, 
0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0x00000000, 
0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0x00000000, 
0x00000000, 0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
};
    uLCD.BLIT(u, v, 11, 11, new_key);
}

void draw_arrow(int u, int v){
    int new_key[121] = {

0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0xfff9f9f9, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0xfff9f9f9, 0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0xfff9f9f9, 0x00000000, 0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0xfff9f9f9, 0x00000000, 0x00000000, 0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xfff9f9f9, 0xfff9f9f9, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
};
    uLCD.BLIT(u, v, 11, 11, new_key);
}

void draw_upper_status(int x, int y, int Om, int lives)
{
    uLCD.filled_rectangle(0, 9, 127, 9, BLACK);
    
    // Draw bottom border of status bar
    uLCD.line(0, 9, 127, 9, GREEN);
    
    // Add other status info drawing code here
    uLCD.locate(0,0);
    uLCD.text_width(1); //4X size text
    uLCD.text_height(1);
    uLCD.color(WHITE);
    if (Om){
        uLCD.printf("(%D,%D)Om,lives:%D----", x, y, lives);
    }else{
        uLCD.printf("(%D,%D)lives:%D----", x, y, lives);
    }
    wait_ms(20);
    uLCD.filled_rectangle(0, 9, 127, 9, WHITE);
    
}

void draw_lower_status()
{
    // Draw top border of status bar
    uLCD.line(0, 118, 127, 118, GREEN);
    
    // Add other status info drawing code here
}

void draw_border()
{
    uLCD.filled_rectangle(0,     9, 127,  14, WHITE); // Top
    uLCD.filled_rectangle(0,    13,   2, 114, WHITE); // Left
    uLCD.filled_rectangle(0,   114, 127, 117, WHITE); // Bottom
    uLCD.filled_rectangle(124,  14, 127, 117, WHITE); // Right
}

void draw_mysprite(int u, int v)
{
    int new_piskel_data[121] = {

0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff11e51d, 0xff11e51d, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff11e5d8, 0xff11e5d8, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xff000000, 0x00000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0x00000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000

};
    uLCD.BLIT(u, v, 11, 11, new_piskel_data);
}

